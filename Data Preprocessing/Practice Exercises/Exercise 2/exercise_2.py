# -*- coding: utf-8 -*-
"""Exercise 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r9KoED4Av4XVe6uotoLDpjdPfpjgYPOg

#Exercise: Data Preprocessing Pipeline

Goal: Create a complete data preprocessing pipeline for a new dataset

##Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""##Importing the dataset"""

dataset = pd.read_csv('customer_dataset.csv')

print(dataset)

"""##Creating the matrix of features"""

X = dataset.iloc[:, :-1].values

print(X)

"""##Creating the dependent variable vector"""

y = dataset.iloc[:, -1].values

print(y)

"""##Taking care of missing data"""

from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy='mean')
imputer.fit(X[:, 1:])
X[:, 1:] = imputer.transform(X[:, 1:])

print(X)

"""##Encoding categorical data

###Encoding the independent variable
"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [0])], remainder='passthrough')
X = np.array(ct.fit_transform(X))

print(X)

"""###Encoding the dependent variable"""

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
y = le.fit_transform(y)

print(y)

"""##Splitting the dataset into training set and test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42, stratify=y)

print(X_train)

print(X_test)

print(y_train)

print(y_test)

"""##Feature scaling

###Standardization
"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train[:, 4:] = sc.fit_transform(X_train[:, 4:])
X_test[:, 4:] = sc.transform(X_test[:, 4:])

print(X_train)

print(X_test)