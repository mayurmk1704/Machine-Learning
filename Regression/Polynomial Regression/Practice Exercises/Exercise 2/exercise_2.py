# -*- coding: utf-8 -*-
"""Exercise 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ujc1tTZXdtSHj3TJ-xrDdMs8ifnPF7Ua

#Exercise: Temperature vs Ice Cream Sales

Goal: Build a polynomial regression model to predict ice cream sales based on temperature, capturing the non-linear relationship.

##Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""##Importing the dataset"""

dataset = pd.read_csv('temperature_sales_dataset.csv')

print(dataset)

"""##Creating the matrix of features"""

X = dataset.iloc[:, :-1].values

print(X)

"""##Creating the dependent variable vector"""

y = dataset.iloc[:, -1].values

print(y)

"""##Creating a new matrix of features"""

from sklearn.preprocessing import PolynomialFeatures
poly_reg_2 = PolynomialFeatures(degree=2)
poly_reg_3 = PolynomialFeatures(degree=3)
poly_reg_4 = PolynomialFeatures(degree=4)
X_poly_2 = poly_reg_2.fit_transform(X)
X_poly_3 = poly_reg_3.fit_transform(X)
X_poly_4 = poly_reg_4.fit_transform(X)

print(X_poly_2)

print(X_poly_3)

print(X_poly_4)

"""##Building the model"""

from sklearn.linear_model import LinearRegression
regressor_2 = LinearRegression()
regressor_3 = LinearRegression()
regressor_4 = LinearRegression()

"""##Training the model"""

regressor_2.fit(X_poly_2, y)
regressor_3.fit(X_poly_3, y)
regressor_4.fit(X_poly_4, y)

"""##Visualizing the results"""

plt.scatter(X, y, color='red')
plt.plot(X, regressor_2.predict(X_poly_2), color='blue')
plt.plot(X, regressor_3.predict(X_poly_3), color='green')
plt.plot(X, regressor_4.predict(X_poly_4), color='black')
plt.title('Temperature vs Ice Cream Sales')
plt.xlabel('Temperature')
plt.ylabel('Ice Cream Sales')
plt.show()

plt.scatter(X, y, color='red')
plt.plot(X, regressor_2.predict(X_poly_2), color='blue')
plt.title('Temperature vs Ice Cream Sales (degree=2)')
plt.xlabel('Temperature')
plt.ylabel('Ice Cream Sales')
plt.show()

plt.scatter(X, y, color='red')
plt.plot(X, regressor_3.predict(X_poly_3), color='blue')
plt.title('Temperature vs Ice Cream Sales (degree=3)')
plt.xlabel('Temperature')
plt.ylabel('Ice Cream Sales')
plt.show()

plt.scatter(X, y, color='red')
plt.plot(X, regressor_4.predict(X_poly_4), color='blue')
plt.title('Temperature vs Ice Cream Sales (degree=4)')
plt.xlabel('Temperature')
plt.ylabel('Ice Cream Sales')
plt.show()

"""##Making a single prediction"""

#Predict sales for temperatures 25°C and 35°C using your best model
print(regressor_4.predict(poly_reg_4.transform([[25]])))
print(regressor_4.predict(poly_reg_4.transform([[35]])))

"""##Performance Metrics"""

from sklearn.metrics import r2_score

"""###R<sup>2</sup> score"""

# Degree = 2
print(r2_score(y, regressor_2.predict(X_poly_2)))

# Degree = 3
print(r2_score(y, regressor_3.predict(X_poly_3)))

# Degree = 4
print(r2_score(y, regressor_4.predict(X_poly_4)))