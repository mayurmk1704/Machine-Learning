# -*- coding: utf-8 -*-
"""Exercise 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-LKc66Am2mxXGXvTdSKfQ5m6a0GaZk-X

#Exercise: Study Hours vs Exam Scores

Goal: Build a simple linear regression model to predict exam scores based on study hours.

##Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""##Importing the dataset"""

dataset = pd.read_csv('study_exam_dataset.csv')

print(dataset)

"""##Creating the matrix of features"""

X = dataset.iloc[:, :-1].values

print(X)

"""##Creating the dependent variable vector"""

y = dataset.iloc[:, -1].values

print(y)

"""##Splitting the dataset into training set and test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print(X_train)

print(X_test)

print(y_train)

print(y_test)

"""##Building the model"""

from sklearn.linear_model import LinearRegression
slr = LinearRegression()

"""##Training the model"""

slr.fit(X_train, y_train)

"""##Predicting the test set results"""

y_pred = slr.predict(X_test)

print(y_pred)

"""##Visualizing the training set results"""

plt.scatter(X_train, y_train, color='red')
plt.plot(X_train, slr.predict(X_train), color='blue')
plt.title('Study Hours vs Exam Scores (Training set)')
plt.xlabel('Study Hours')
plt.ylabel('Exam Scores')
plt.show()

"""##Visualizing the test set results"""

plt.scatter(X_test, y_test, color='red')
plt.plot(X_test, y_pred, color='blue')
plt.title('Study Hours vs Exam Scores (Test set)')
plt.xlabel('Study Hours')
plt.ylabel('Exam Scores')
plt.show()

"""##Making a single prediction"""

#Make a prediction for a student who studied 4.5 hours
print(slr.predict([[4.5]]))

"""##Calculating the values of the coefficients

###Calculating b<sub>0</sub> (y-intercept)
"""

print(slr.intercept_)

"""###Calculating b<sub>1</sub> (slope coefficient)"""

print(slr.coef_)

"""###Calculate the prediction manually using the formula: y = b<sub>0</sub> + b<sub>1</sub> * X and verify it matches the model's prediction."""

print(slr.intercept_ + slr.coef_ * 4.5)