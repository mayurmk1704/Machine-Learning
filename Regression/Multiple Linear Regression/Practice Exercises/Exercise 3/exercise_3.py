# -*- coding: utf-8 -*-
"""Exercise 3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gEiXu5QHAu9vQk2Enl0gtf_S49D4GM5U

#Exercise: Multiple Linear Regression for Employee Salary Prediction

Goal: Build a complete multiple linear regression model to predict employee salaries based on multiple features including a categorical variable (department), with predictions comparison and coefficient analysis

##Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""##Importing the dataset"""

dataset = pd.read_csv('employee_dataset.csv')

print(dataset)

"""##Creating the matrix of features"""

X = dataset.iloc[:, :-1].values

print(X)

"""##Creating the dependent variable vector"""

y = dataset.iloc[:, -1].values

print(y)

"""##Encoding categorical data

###Encoding the independent variable
"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [3])], remainder='passthrough')
X = np.array(ct.fit_transform(X))

print(X)

"""##Splitting the dataset into training set and test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

print(X_train)

print(X_test)

print(y_train)

print(y_test)

"""##Building the model"""

from sklearn.linear_model import LinearRegression
mlr = LinearRegression()

"""##Training the model"""

mlr.fit(X_train, y_train)

"""##Predicting the test set results"""

y_pred = mlr.predict(X_test)

print(y_pred)

"""##Display the predicted and actual test set results"""

np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_test), 1)), axis=1))

"""##Making a single prediction"""

print(mlr.predict([[1, 0, 0, 1, 70, 4]]))

"""##Calculating the values of the coefficients

###Calculating b<sub>0</sub> (y-intercept)
"""

print(mlr.intercept_)

"""##Calculating b<sub>i</sub> (slope coefficients)"""

print(mlr.coef_)